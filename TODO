
 - - - - - - GAME - - - - - -
 - explosion animation
 - implement nitro-thrust using fuel
 - send time step that the game ended and render that end state
 - missiles should look like torpedoes
 - add planet


 - - - - - - SERVER - - - - -
 - server should track players disconnecting and clean up games


 - - - - - -  UI  - - - - - -
 - implement UI sidebar


 - - - - - - LOBBY - - - - -
 - styling and fancy UI for lobby
 - indicate which other players are connected and if they're in the lobby
 - clear your chat on send
 - Enter should send chat too
 - only join one game at a time


 - - - - - - REFACTOR - - - - - -
 - how should unique gameIDs be assigned to newly-created games?
 - server side code should live in its own directory?
 - dispatchToServer shouldn't need to take in clientID


 - - - - - - BUGS - - - - - -
 - sometimes the game can start multiple times without stopping


 - - - - - - WISH - - - - - -
 - actually implement configurable speed of light delay



 - - - - - - DONE - - - - - -
 - basic game state
 - set up centralized config outside of state

 - physics set up
 - rendering
 - tune gravitational constants to get stable orbits
 - controls for turning/thrust
 - create gameReducer for to game-specific actions
 - research/setup multiplayer frameworks like eureca

 - deploy to github (don't forget package.json)
 - implement historical paths
 - implement sending player actions to the server
 - implement receiving player actions from the server
 - implement projectiles and shooting

 - implement lobby with creatable/joinable games
 - set up transition between lobby and game itself

 - need to track game metadata on the server to update new players
 - add time to player actions, and recompute positions based on them
 - basic syncing algorithm for the clients

 - synchronize the clients so they start at the same time (using setTimeout now...)
 - compute locations of projectiles based on timestamp

 - remove node_modules and bin from git repo
 - implement future/projected paths

 - deploy to heroku
 - implement collisions
 - implement win/lose/restart

 - sync game loss scenarios so both players always agree
 - fix readiness between games
 - projectiles destroyed if they hit the sun
 - implement missile weapons

 - ask the client what they want their name to be and track on the server
 - add chat room to lobby
 - handle overflow in the lobby, without losing scroll lock on game itself

 - separate pixels and distances
 - abstract away rendering into something neater
