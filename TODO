
 - - - - - - TODO - - - - - -
 - implement collisions
 - implement thrust using fuel
 - implement win/lose/restart

 - - - - - - NEXT - - - - - -
 - server should track players disconnecting and clean up games
 - ask the client what they want their name to be and track on the server


 - - - - - - LATER - - - - - -
 - implement UI sidebar
 - styling and fancy UI for lobby
 - set up deploy script
 - set up transition between lobby and game itself
 - implement ending games and cleaning them up off the server when players disc


 - - - - - - REFACTOR - - - - - -
 - how should unique gameIDs be assigned to newly-created games?
 - server side code should live in its own directory?
 - abstract away rendering into something neater
 - separate pixels and distances
 - make systems flow-checked


 - - - - - - BUGS - - - - - -


 - - - - - - WISH - - - - - -
 - actually implement configurable speed of light delay



 - - - - - - DONE - - - - - -
 - basic game state
 - set up centralized config outside of state

 - physics set up
 - rendering
 - tune gravitational constants to get stable orbits
 - controls for turning/thrust
 - create gameReducer for to game-specific actions
 - research/setup multiplayer frameworks like eureca

 - deploy to github (don't forget package.json)
 - implement historical paths
 - implement sending player actions to the server
 - implement receiving player actions from the server
 - implement projectiles and shooting

 - implement lobby with creatable/joinable games

 - need to track game metadata on the server to update new players
 - add time to player actions, and recompute positions based on them
 - basic syncing algorithm for the clients

 - synchronize the clients so they start at the same time (using setTimeout now...)
 - compute locations of projectiles based on timestamp

 - remove node_modules and bin from git repo
 - implement future/projected paths
